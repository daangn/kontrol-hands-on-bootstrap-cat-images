import { useState, useRef } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import useSWR from 'swr'
import styles from '@/styles/Home.module.css'

const inter = Inter({ subsets: ['latin'] })

const fetcher = (...args) => fetch(...args).then(res => res.json())

export default function Home() {
  const { data, mutate } = useSWR('/api/images', fetcher)
  const [putting, setPutting] = useState(false)
  const dataBeforePut = useRef(0)
  if (!data) {
    return (
      <main className={styles.main}>
        <h1 className={styles.title}>Loading...</h1>
      </main>
    )
  }
   
  const put = async () => {
    setPutting(true)
    dataBeforePut.current = data
    await fetch('/api/images', { method: 'POST' })
    await mutate()
    setPutting(false)
  }

  return (
    <>
      <Head>
        <title>Catstagram</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div className={styles.description}>
          <p>
            Get started by editing&nbsp;
            <code className={styles.code}>src/pages/index.js</code>
          </p>

          <p
            style={{ cursor: putting ? 'default' : 'pointer' }}
            onClick={putting ? undefined : put}
          >
            {putting ? 'Loading...' : '+'}
          </p>
        </div>

        <div className={styles.center}>
          <h1 className={styles.title}>
            {data.animalType.toUpperCase()} ({data.images.length})
          </h1>
        </div>

        <div className={styles.grid} style={{ gap: 9 }}>
          {dataBeforePut.current === data && (
            <div
              style={{
                position: 'relative', width: 320, height: 320, background: '#44444496',
                display: 'flex', justifyContent: 'center', alignItems: 'center'
              }}
            >
              Loading...
            </div>
          )}

          {data.images.map(url => (
            <div
              key={url.split('?')[0]}
              style={{ position: 'relative', width: 320, height: 320, background: '#44444496' }}
            >
              <Image
                src={url}
                alt='image'
                style={{ objectFit: 'cover' }}
                fill
                unoptimized
              />
            </div>
          ))}
        </div>
      </main>
    </>
  )
}
